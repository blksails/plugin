// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: proto/plugin.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ABLink 定义
type ABLink struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BackSource          string                 `protobuf:"bytes,3,opt,name=back_source,json=backSource,proto3" json:"back_source,omitempty"`
	ReviewUrl           string                 `protobuf:"bytes,4,opt,name=review_url,json=reviewUrl,proto3" json:"review_url,omitempty"`
	Domains             []string               `protobuf:"bytes,5,rep,name=domains,proto3" json:"domains,omitempty"`
	Alias               []string               `protobuf:"bytes,6,rep,name=alias,proto3" json:"alias,omitempty"`
	RoUrls              []string               `protobuf:"bytes,7,rep,name=ro_urls,json=roUrls,proto3" json:"ro_urls,omitempty"`
	CoUrls              []string               `protobuf:"bytes,8,rep,name=co_urls,json=coUrls,proto3" json:"co_urls,omitempty"`
	ReUrls              []string               `protobuf:"bytes,9,rep,name=re_urls,json=reUrls,proto3" json:"re_urls,omitempty"`
	Tags                []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	CompIds             []string               `protobuf:"bytes,11,rep,name=comp_ids,json=compIds,proto3" json:"comp_ids,omitempty"`
	WhiteCompIds        []string               `protobuf:"bytes,12,rep,name=white_comp_ids,json=whiteCompIds,proto3" json:"white_comp_ids,omitempty"`
	Review              bool                   `protobuf:"varint,13,opt,name=review,proto3" json:"review,omitempty"`
	WhiteComp           bool                   `protobuf:"varint,14,opt,name=white_comp,json=whiteComp,proto3" json:"white_comp,omitempty"`
	PrepareDomainSize   int32                  `protobuf:"varint,15,opt,name=prepare_domain_size,json=prepareDomainSize,proto3" json:"prepare_domain_size,omitempty"`
	Mode                string                 `protobuf:"bytes,16,opt,name=mode,proto3" json:"mode,omitempty"`
	RecentPickDomain    string                 `protobuf:"bytes,17,opt,name=recent_pick_domain,json=recentPickDomain,proto3" json:"recent_pick_domain,omitempty"`
	JumpMode            string                 `protobuf:"bytes,18,opt,name=jump_mode,json=jumpMode,proto3" json:"jump_mode,omitempty"`
	Scope               string                 `protobuf:"bytes,19,opt,name=scope,proto3" json:"scope,omitempty"`
	ScopeName           string                 `protobuf:"bytes,20,opt,name=scope_name,json=scopeName,proto3" json:"scope_name,omitempty"`
	ProtectCode         string                 `protobuf:"bytes,21,opt,name=protect_code,json=protectCode,proto3" json:"protect_code,omitempty"`
	ProtectCodeJs       string                 `protobuf:"bytes,22,opt,name=protect_code_js,json=protectCodeJs,proto3" json:"protect_code_js,omitempty"`
	InstallJs           string                 `protobuf:"bytes,23,opt,name=install_js,json=installJs,proto3" json:"install_js,omitempty"`
	InstallChecked      bool                   `protobuf:"varint,24,opt,name=install_checked,json=installChecked,proto3" json:"install_checked,omitempty"`
	Percentile          float64                `protobuf:"fixed64,25,opt,name=percentile,proto3" json:"percentile,omitempty"`
	PercentileRate      float64                `protobuf:"fixed64,26,opt,name=percentile_rate,json=percentileRate,proto3" json:"percentile_rate,omitempty"`
	DomainFactory       string                 `protobuf:"bytes,27,opt,name=domain_factory,json=domainFactory,proto3" json:"domain_factory,omitempty"`
	DomainThreshold     int32                  `protobuf:"varint,28,opt,name=domain_threshold,json=domainThreshold,proto3" json:"domain_threshold,omitempty"`
	BlockThreshold      int32                  `protobuf:"varint,29,opt,name=block_threshold,json=blockThreshold,proto3" json:"block_threshold,omitempty"`
	DisableInjectjs     bool                   `protobuf:"varint,30,opt,name=disable_injectjs,json=disableInjectjs,proto3" json:"disable_injectjs,omitempty"`
	DisableReview       bool                   `protobuf:"varint,31,opt,name=disable_review,json=disableReview,proto3" json:"disable_review,omitempty"`
	DomainFactoryConfig map[string]string      `protobuf:"bytes,32,rep,name=domain_factory_config,json=domainFactoryConfig,proto3" json:"domain_factory_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	EmailTo             []string               `protobuf:"bytes,33,rep,name=email_to,json=emailTo,proto3" json:"email_to,omitempty"`
	Links               []string               `protobuf:"bytes,34,rep,name=links,proto3" json:"links,omitempty"`
	IpCities            []string               `protobuf:"bytes,35,rep,name=ip_cities,json=ipCities,proto3" json:"ip_cities,omitempty"`
	IspBlocks           []string               `protobuf:"bytes,36,rep,name=isp_blocks,json=ispBlocks,proto3" json:"isp_blocks,omitempty"`
	ReverseCity         bool                   `protobuf:"varint,37,opt,name=reverse_city,json=reverseCity,proto3" json:"reverse_city,omitempty"`
	Disable             bool                   `protobuf:"varint,38,opt,name=disable,proto3" json:"disable,omitempty"`
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,39,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,40,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	RefreshAt           *timestamppb.Timestamp `protobuf:"bytes,41,opt,name=refresh_at,json=refreshAt,proto3" json:"refresh_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ABLink) Reset() {
	*x = ABLink{}
	mi := &file_proto_plugin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ABLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ABLink) ProtoMessage() {}

func (x *ABLink) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ABLink.ProtoReflect.Descriptor instead.
func (*ABLink) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{0}
}

func (x *ABLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ABLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ABLink) GetBackSource() string {
	if x != nil {
		return x.BackSource
	}
	return ""
}

func (x *ABLink) GetReviewUrl() string {
	if x != nil {
		return x.ReviewUrl
	}
	return ""
}

func (x *ABLink) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *ABLink) GetAlias() []string {
	if x != nil {
		return x.Alias
	}
	return nil
}

func (x *ABLink) GetRoUrls() []string {
	if x != nil {
		return x.RoUrls
	}
	return nil
}

func (x *ABLink) GetCoUrls() []string {
	if x != nil {
		return x.CoUrls
	}
	return nil
}

func (x *ABLink) GetReUrls() []string {
	if x != nil {
		return x.ReUrls
	}
	return nil
}

func (x *ABLink) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ABLink) GetCompIds() []string {
	if x != nil {
		return x.CompIds
	}
	return nil
}

func (x *ABLink) GetWhiteCompIds() []string {
	if x != nil {
		return x.WhiteCompIds
	}
	return nil
}

func (x *ABLink) GetReview() bool {
	if x != nil {
		return x.Review
	}
	return false
}

func (x *ABLink) GetWhiteComp() bool {
	if x != nil {
		return x.WhiteComp
	}
	return false
}

func (x *ABLink) GetPrepareDomainSize() int32 {
	if x != nil {
		return x.PrepareDomainSize
	}
	return 0
}

func (x *ABLink) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

func (x *ABLink) GetRecentPickDomain() string {
	if x != nil {
		return x.RecentPickDomain
	}
	return ""
}

func (x *ABLink) GetJumpMode() string {
	if x != nil {
		return x.JumpMode
	}
	return ""
}

func (x *ABLink) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *ABLink) GetScopeName() string {
	if x != nil {
		return x.ScopeName
	}
	return ""
}

func (x *ABLink) GetProtectCode() string {
	if x != nil {
		return x.ProtectCode
	}
	return ""
}

func (x *ABLink) GetProtectCodeJs() string {
	if x != nil {
		return x.ProtectCodeJs
	}
	return ""
}

func (x *ABLink) GetInstallJs() string {
	if x != nil {
		return x.InstallJs
	}
	return ""
}

func (x *ABLink) GetInstallChecked() bool {
	if x != nil {
		return x.InstallChecked
	}
	return false
}

func (x *ABLink) GetPercentile() float64 {
	if x != nil {
		return x.Percentile
	}
	return 0
}

func (x *ABLink) GetPercentileRate() float64 {
	if x != nil {
		return x.PercentileRate
	}
	return 0
}

func (x *ABLink) GetDomainFactory() string {
	if x != nil {
		return x.DomainFactory
	}
	return ""
}

func (x *ABLink) GetDomainThreshold() int32 {
	if x != nil {
		return x.DomainThreshold
	}
	return 0
}

func (x *ABLink) GetBlockThreshold() int32 {
	if x != nil {
		return x.BlockThreshold
	}
	return 0
}

func (x *ABLink) GetDisableInjectjs() bool {
	if x != nil {
		return x.DisableInjectjs
	}
	return false
}

func (x *ABLink) GetDisableReview() bool {
	if x != nil {
		return x.DisableReview
	}
	return false
}

func (x *ABLink) GetDomainFactoryConfig() map[string]string {
	if x != nil {
		return x.DomainFactoryConfig
	}
	return nil
}

func (x *ABLink) GetEmailTo() []string {
	if x != nil {
		return x.EmailTo
	}
	return nil
}

func (x *ABLink) GetLinks() []string {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ABLink) GetIpCities() []string {
	if x != nil {
		return x.IpCities
	}
	return nil
}

func (x *ABLink) GetIspBlocks() []string {
	if x != nil {
		return x.IspBlocks
	}
	return nil
}

func (x *ABLink) GetReverseCity() bool {
	if x != nil {
		return x.ReverseCity
	}
	return false
}

func (x *ABLink) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *ABLink) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ABLink) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ABLink) GetRefreshAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RefreshAt
	}
	return nil
}

type StartRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        map[string]string      `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	mi := &file_proto_plugin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{1}
}

func (x *StartRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type StartResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	mi := &file_proto_plugin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{2}
}

type StopRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopRequest) Reset() {
	*x = StopRequest{}
	mi := &file_proto_plugin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRequest) ProtoMessage() {}

func (x *StopRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRequest.ProtoReflect.Descriptor instead.
func (*StopRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{3}
}

type StopResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopResponse) Reset() {
	*x = StopResponse{}
	mi := &file_proto_plugin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopResponse) ProtoMessage() {}

func (x *StopResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopResponse.ProtoReflect.Descriptor instead.
func (*StopResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{4}
}

type InstallRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LinkId        string                 `protobuf:"bytes,1,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallRequest) Reset() {
	*x = InstallRequest{}
	mi := &file_proto_plugin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallRequest) ProtoMessage() {}

func (x *InstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallRequest.ProtoReflect.Descriptor instead.
func (*InstallRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{5}
}

func (x *InstallRequest) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type InstallResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scripts       []string               `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InstallResponse) Reset() {
	*x = InstallResponse{}
	mi := &file_proto_plugin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InstallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallResponse) ProtoMessage() {}

func (x *InstallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallResponse.ProtoReflect.Descriptor instead.
func (*InstallResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{6}
}

func (x *InstallResponse) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

type EnterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	LinkId        string                 `protobuf:"bytes,2,opt,name=link_id,json=linkId,proto3" json:"link_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterRequest) Reset() {
	*x = EnterRequest{}
	mi := &file_proto_plugin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRequest) ProtoMessage() {}

func (x *EnterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRequest.ProtoReflect.Descriptor instead.
func (*EnterRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{7}
}

func (x *EnterRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *EnterRequest) GetLinkId() string {
	if x != nil {
		return x.LinkId
	}
	return ""
}

type EnterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Allowed       bool                   `protobuf:"varint,1,opt,name=allowed,proto3" json:"allowed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnterResponse) Reset() {
	*x = EnterResponse{}
	mi := &file_proto_plugin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterResponse) ProtoMessage() {}

func (x *EnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterResponse.ProtoReflect.Descriptor instead.
func (*EnterResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_proto_rawDescGZIP(), []int{8}
}

func (x *EnterResponse) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

var File_proto_plugin_proto protoreflect.FileDescriptor

var file_proto_plugin_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x0b,
	0x0a, 0x06, 0x41, 0x42, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6f, 0x6d, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x70, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x77, 0x68, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x70, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x63, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x65,
	0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x6a, 0x73, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x4a, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x6a, 0x73,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4a,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x69, 0x6c, 0x65, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74,
	0x6a, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x6a, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x5b, 0x0a, 0x15, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x41, 0x42, 0x4c, 0x69, 0x6e, 0x6b, 0x2e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x6f, 0x18, 0x21, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x70, 0x5f, 0x63, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x23, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x70, 0x43, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x70, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x24, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x70, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x72, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x43, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x61, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x41, 0x74, 0x1a, 0x46, 0x0a, 0x18, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x83, 0x01, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x39, 0x0a, 0x0b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x0a, 0x0e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x22, 0x2b, 0x0a, 0x0f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x73, 0x22, 0x46,
	0x0a, 0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6c, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x32, 0xea, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x13, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x07,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x12, 0x14, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1f,
	0x5a, 0x1d, 0x70, 0x6b, 0x67, 0x2e, 0x62, 0x6c, 0x6b, 0x73, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x6e,
	0x65, 0x74, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_plugin_proto_rawDescOnce sync.Once
	file_proto_plugin_proto_rawDescData []byte
)

func file_proto_plugin_proto_rawDescGZIP() []byte {
	file_proto_plugin_proto_rawDescOnce.Do(func() {
		file_proto_plugin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_plugin_proto_rawDesc), len(file_proto_plugin_proto_rawDesc)))
	})
	return file_proto_plugin_proto_rawDescData
}

var file_proto_plugin_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_plugin_proto_goTypes = []any{
	(*ABLink)(nil),                // 0: plugin.ABLink
	(*StartRequest)(nil),          // 1: plugin.StartRequest
	(*StartResponse)(nil),         // 2: plugin.StartResponse
	(*StopRequest)(nil),           // 3: plugin.StopRequest
	(*StopResponse)(nil),          // 4: plugin.StopResponse
	(*InstallRequest)(nil),        // 5: plugin.InstallRequest
	(*InstallResponse)(nil),       // 6: plugin.InstallResponse
	(*EnterRequest)(nil),          // 7: plugin.EnterRequest
	(*EnterResponse)(nil),         // 8: plugin.EnterResponse
	nil,                           // 9: plugin.ABLink.DomainFactoryConfigEntry
	nil,                           // 10: plugin.StartRequest.ConfigEntry
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_proto_plugin_proto_depIdxs = []int32{
	9,  // 0: plugin.ABLink.domain_factory_config:type_name -> plugin.ABLink.DomainFactoryConfigEntry
	11, // 1: plugin.ABLink.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: plugin.ABLink.updated_at:type_name -> google.protobuf.Timestamp
	11, // 3: plugin.ABLink.refresh_at:type_name -> google.protobuf.Timestamp
	10, // 4: plugin.StartRequest.config:type_name -> plugin.StartRequest.ConfigEntry
	1,  // 5: plugin.PluginService.Start:input_type -> plugin.StartRequest
	3,  // 6: plugin.PluginService.Stop:input_type -> plugin.StopRequest
	5,  // 7: plugin.PluginService.Install:input_type -> plugin.InstallRequest
	7,  // 8: plugin.PluginService.Enter:input_type -> plugin.EnterRequest
	2,  // 9: plugin.PluginService.Start:output_type -> plugin.StartResponse
	4,  // 10: plugin.PluginService.Stop:output_type -> plugin.StopResponse
	6,  // 11: plugin.PluginService.Install:output_type -> plugin.InstallResponse
	8,  // 12: plugin.PluginService.Enter:output_type -> plugin.EnterResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_plugin_proto_init() }
func file_proto_plugin_proto_init() {
	if File_proto_plugin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_plugin_proto_rawDesc), len(file_proto_plugin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_plugin_proto_goTypes,
		DependencyIndexes: file_proto_plugin_proto_depIdxs,
		MessageInfos:      file_proto_plugin_proto_msgTypes,
	}.Build()
	File_proto_plugin_proto = out.File
	file_proto_plugin_proto_goTypes = nil
	file_proto_plugin_proto_depIdxs = nil
}
